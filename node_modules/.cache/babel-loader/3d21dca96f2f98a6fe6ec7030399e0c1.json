{"ast":null,"code":"import { LOGIN_SUCCESS, LOGIN_FAIL, REGISTER_SUCCESS, REGISTER_FAIL, LOGOUT, SUBMIT_PHONE_NUMBER, DELETE_PHONE_NUMBER } from './types';\nimport axios from 'axios';\nexport const login = ({\n  email,\n  password\n}) => async dispatch => {\n  try {\n    // configuration of the HTTP request to the backend\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }; // Convert JS object into JSON to send to Flask.\n\n    const body = JSON.stringify({\n      email,\n      password\n    }); // Store the logged in user's token into a redux state for authentication purposes.\n\n    const res = await axios.post('/api/login', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\nexport const register = ({\n  username,\n  email,\n  password\n}) => async dispatch => {\n  try {\n    // configuration of the HTTP request to the backend\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }; // Convert JS object into JSON to send to Flask.\n\n    const body = JSON.stringify({\n      username,\n      email,\n      password\n    }); // Store the logged in user's token into a redux state for authentication purposes.\n\n    const res = await axios.post('/api/register', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n};\nexport const submitPhoneNumber = ({\n  id,\n  phoneNumber\n}) => async dispatch => {\n  try {\n    // configuration of the HTTP request to the backend\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      id,\n      phoneNumber\n    });\n    const res = await axios.post('/api/submitPhoneNumber', body, config);\n    console.log('res from submit phone number: ', res);\n    dispatch({\n      type: SUBMIT_PHONE_NUMBER,\n      payload: res.data\n    });\n  } catch (err) {}\n};\nexport const deletePhoneNumber = id => async dispatch => {\n  try {\n    const res = await axios.delete('/api/deletePhoneNumber', {\n      params: {\n        id\n      }\n    });\n    console.log('res from del phone number: ', res);\n    dispatch({\n      type: DELETE_PHONE_NUMBER,\n      payload: res.data\n    });\n  } catch (err) {}\n};","map":{"version":3,"sources":["/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/actions/auth.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_SUCCESS","REGISTER_FAIL","LOGOUT","SUBMIT_PHONE_NUMBER","DELETE_PHONE_NUMBER","axios","login","email","password","dispatch","config","headers","body","JSON","stringify","res","post","type","payload","data","err","register","username","logout","submitPhoneNumber","id","phoneNumber","console","log","deletePhoneNumber","delete","params"],"mappings":"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","sourcesContent":["import {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGOUT,\n  SUBMIT_PHONE_NUMBER,\n  DELETE_PHONE_NUMBER,\n} from './types';\nimport axios from 'axios';\n\nexport const login = ({ email, password }) => async (dispatch) => {\n  try {\n    // configuration of the HTTP request to the backend\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    // Convert JS object into JSON to send to Flask.\n    const body = JSON.stringify({ email, password });\n\n    // Store the logged in user's token into a redux state for authentication purposes.\n    const res = await axios.post('/api/login', body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\nexport const register = ({ username, email, password }) => async (dispatch) => {\n  try {\n    // configuration of the HTTP request to the backend\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    // Convert JS object into JSON to send to Flask.\n    const body = JSON.stringify({ username, email, password });\n\n    // Store the logged in user's token into a redux state for authentication purposes.\n    const res = await axios.post('/api/register', body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  dispatch({\n    type: LOGOUT,\n  });\n};\n\nexport const submitPhoneNumber = ({ id, phoneNumber }) => async (dispatch) => {\n  try {\n    // configuration of the HTTP request to the backend\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    const body = JSON.stringify({\n      id,\n      phoneNumber,\n    });\n\n    const res = await axios.post('/api/submitPhoneNumber', body, config);\n\n    console.log('res from submit phone number: ', res);\n    dispatch({\n      type: SUBMIT_PHONE_NUMBER,\n      payload: res.data,\n    });\n  } catch (err) {}\n};\n\nexport const deletePhoneNumber = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete('/api/deletePhoneNumber', {\n      params: {\n        id,\n      },\n    });\n\n    console.log('res from del phone number: ', res);\n\n    dispatch({\n      type: DELETE_PHONE_NUMBER,\n      payload: res.data,\n    });\n  } catch (err) {}\n};\n"]},"metadata":{},"sourceType":"module"}