{"ast":null,"code":"import { SUBMIT_SUBREDDIT_INFO, SUBMIT_SUBREDDIT_INFO_FAIL, FETCH_SUBREDDITS, FETCH_SUBREDDITS_FAIL } from './types';\nimport axios from 'axios';\nexport const submitSubredditInfo = ({\n  subredditName,\n  subredditKeywords\n}) => async dispatch => {\n  try {\n    // configuration of the HTTP request to the backend\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      subredditName,\n      subredditKeywords\n    });\n    const res = await axios.post('/api/submitSubredditInfo', body, config);\n    dispatch({\n      type: SUBMIT_SUBREDDIT_INFO,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: SUBMIT_SUBREDDIT_INFO_FAIL,\n      payload: {\n        msg: err\n      }\n    });\n  }\n};\nexport const fetchUserSubreddits = () => async dispatch => {\n  try {\n    console.log('firing fetchUserSubreddits() action.');\n    const res = await axios.get('/api/fetchSubredditsInfo');\n    dispatch({\n      type: FETCH_SUBREDDITS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log('failure in fetchUserSubreddits() action.');\n    dispatch({\n      type: FETCH_SUBREDDITS_FAIL,\n      payload: {\n        msg: err\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/actions/subreddit.js"],"names":["SUBMIT_SUBREDDIT_INFO","SUBMIT_SUBREDDIT_INFO_FAIL","FETCH_SUBREDDITS","FETCH_SUBREDDITS_FAIL","axios","submitSubredditInfo","subredditName","subredditKeywords","dispatch","config","headers","body","JSON","stringify","res","post","type","payload","data","err","msg","fetchUserSubreddits","console","log","get"],"mappings":"AAAA,SACEA,qBADF,EAEEC,0BAFF,EAGEC,gBAHF,EAIEC,qBAJF,QAKO,SALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,mBAAmB,GAAG,CAAC;AAClCC,EAAAA,aADkC;AAElCC,EAAAA;AAFkC,CAAD,KAG7B,MAAOC,QAAP,IAAoB;AACxB,MAAI;AACF;AACA,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAKA,UAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,KAAf,CAAb;AACA,UAAMO,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,0BAAX,EAAuCJ,IAAvC,EAA6CF,MAA7C,CAAlB;AAEAD,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEhB,qBADC;AAEPiB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAdD,CAcE,OAAOC,GAAP,EAAY;AACZX,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEf,0BADC;AAEPgB,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED;AAAP;AAFF,KAAD,CAAR;AAID;AACF,CAxBM;AA0BP,OAAO,MAAME,mBAAmB,GAAG,MAAM,MAAOb,QAAP,IAAoB;AAC3D,MAAI;AACFc,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACA,UAAMT,GAAG,GAAG,MAAMV,KAAK,CAACoB,GAAN,CAAU,0BAAV,CAAlB;AAEAhB,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEd,gBADC;AAEPe,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GARD,CAQE,OAAOC,GAAP,EAAY;AACZG,IAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACAf,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEb,qBADC;AAEPc,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED;AAAP;AAFF,KAAD,CAAR;AAID;AACF,CAhBM","sourcesContent":["import {\n  SUBMIT_SUBREDDIT_INFO,\n  SUBMIT_SUBREDDIT_INFO_FAIL,\n  FETCH_SUBREDDITS,\n  FETCH_SUBREDDITS_FAIL,\n} from './types';\nimport axios from 'axios';\n\nexport const submitSubredditInfo = ({\n  subredditName,\n  subredditKeywords,\n}) => async (dispatch) => {\n  try {\n    // configuration of the HTTP request to the backend\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    const body = JSON.stringify({ subredditName, subredditKeywords });\n    const res = await axios.post('/api/submitSubredditInfo', body, config);\n\n    dispatch({\n      type: SUBMIT_SUBREDDIT_INFO,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: SUBMIT_SUBREDDIT_INFO_FAIL,\n      payload: { msg: err },\n    });\n  }\n};\n\nexport const fetchUserSubreddits = () => async (dispatch) => {\n  try {\n    console.log('firing fetchUserSubreddits() action.');\n    const res = await axios.get('/api/fetchSubredditsInfo');\n\n    dispatch({\n      type: FETCH_SUBREDDITS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log('failure in fetchUserSubreddits() action.');\n    dispatch({\n      type: FETCH_SUBREDDITS_FAIL,\n      payload: { msg: err },\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}