{"ast":null,"code":"import { LOGIN_SUCCESS, LOGIN_FAIL } from './types';\nimport axios from 'axios';\nexport const login = ({\n  email,\n  password\n}) => async dispatch => {\n  try {\n    // configuration of the HTTP request to the backend\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }; // Convert JS object into JSON to send to Flask.\n\n    const body = JSON.stringify({\n      email,\n      password\n    });\n    const res = await axios.post('/api/login', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/actions/auth.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","axios","login","email","password","dispatch","config","headers","body","JSON","stringify","res","post","type","payload","data","err"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,SAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB,MAAOC,QAAP,IAAoB;AAChE,MAAI;AACF;AACA,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf,CAFE,CAQF;;AACA,UAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAf,CAAb;AAEA,UAAMO,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,YAAX,EAAyBJ,IAAzB,EAA+BF,MAA/B,CAAlB;AAEAD,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEd,aADC;AAEPe,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAjBD,CAiBE,OAAOC,GAAP,EAAY;AACZX,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEb;AADC,KAAD,CAAR;AAGD;AACF,CAvBM","sourcesContent":["import { LOGIN_SUCCESS, LOGIN_FAIL } from './types';\nimport axios from 'axios';\n\nexport const login = ({ email, password }) => async (dispatch) => {\n  try {\n    // configuration of the HTTP request to the backend\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    // Convert JS object into JSON to send to Flask.\n    const body = JSON.stringify({ email, password });\n\n    const res = await axios.post('/api/login', body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}