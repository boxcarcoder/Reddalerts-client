{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/layout/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { submitSubredditInfo } from '../../actions/subreddit';\nimport DashboardTable from './DashboardTable';\n\nconst Dashboard = ({\n  submitSubredditInfo,\n  subredditState: {\n    subreddits\n  }\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    subredditName: '',\n    subredditKeywords: ''\n  });\n  const {\n    subredditName,\n    subredditKeywords\n  } = formData;\n\n  const handleSubmit = e => {\n    e.preventDefault(); // send formData by using an action.\n\n    submitSubredditInfo({\n      subredditName,\n      subredditKeywords\n    });\n  };\n\n  const handleSubredditName = e => {\n    setFormData({ ...formData,\n      subredditName: e.target.value\n    });\n  };\n\n  const handleSubredditKeywords = e => {\n    setFormData({ ...formData,\n      subredditKeywords: e.target.value\n    });\n  };\n\n  const displaySubredditTables = () => {\n    console.log('displaySubredditTables.');\n    console.log('subreddits.length: ', subreddits.length);\n    return subreddits.map(subreddit => /*#__PURE__*/_jsxDEV(DashboardTable, {\n      subreddit: subreddit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reddalerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Subreddits To Monitor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Subreddit\",\n        value: subredditName,\n        onChange: handleSubredditName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Keywords\",\n        value: subredditKeywords,\n        onChange: handleSubredditKeywords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), displaySubredditTables()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"wOd83ZU8gH9lncfdkYXmgv1cMNo=\");\n\n_c = Dashboard;\n\nconst mapToStateToProps = state => ({\n  subredditState: state.subreddit\n});\n\nexport default connect(mapToStateToProps, {\n  submitSubredditInfo\n})(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/layout/Dashboard.js"],"names":["React","Fragment","useState","connect","submitSubredditInfo","DashboardTable","Dashboard","subredditState","subreddits","formData","setFormData","subredditName","subredditKeywords","handleSubmit","e","preventDefault","handleSubredditName","target","value","handleSubredditKeywords","displaySubredditTables","console","log","length","map","subreddit","mapToStateToProps","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEF,EAAAA,mBAAF;AAAuBG,EAAAA,cAAc,EAAE;AAAEC,IAAAA;AAAF;AAAvC,CAAD,KAA6D;AAAA;;AAC7E,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC;AACvCS,IAAAA,aAAa,EAAE,EADwB;AAEvCC,IAAAA,iBAAiB,EAAE;AAFoB,GAAD,CAAxC;AAKA,QAAM;AAAED,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAuCH,QAA7C;;AAEA,QAAMI,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF,GAD0B,CAE1B;;AACAX,IAAAA,mBAAmB,CAAC;AAAEO,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,KAAD,CAAnB;AACD,GAJD;;AAMA,QAAMI,mBAAmB,GAAIF,CAAD,IAAO;AACjCJ,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVE,MAAAA,aAAa,EAAEG,CAAC,CAACG,MAAF,CAASC;AAFd,KAAD,CAAX;AAID,GALD;;AAOA,QAAMC,uBAAuB,GAAIL,CAAD,IAAO;AACrCJ,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVG,MAAAA,iBAAiB,EAAEE,CAAC,CAACG,MAAF,CAASC;AAFlB,KAAD,CAAX;AAID,GALD;;AAOA,QAAME,sBAAsB,GAAG,MAAM;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCd,UAAU,CAACe,MAA9C;AACA,WAAOf,UAAU,CAACgB,GAAX,CAAgBC,SAAD,iBACpB,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAEA;AAA3B;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAGD,GAND;;AAQA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAM,MAAA,QAAQ,EAAEZ,YAAhB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,WAFd;AAGE,QAAA,KAAK,EAAEF,aAHT;AAIE,QAAA,QAAQ,EAAEK;AAJZ;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,UAFd;AAGE,QAAA,KAAK,EAAEJ,iBAHT;AAIE,QAAA,QAAQ,EAAEO;AAJZ;AAAA;AAAA;AAAA;AAAA,cAPF,eAaE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAbF,EAcGC,sBAAsB,EAdzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA1DD;;GAAMd,S;;KAAAA,S;;AA4DN,MAAMoB,iBAAiB,GAAIC,KAAD,KAAY;AACpCpB,EAAAA,cAAc,EAAEoB,KAAK,CAACF;AADc,CAAZ,CAA1B;;AAIA,eAAetB,OAAO,CAACuB,iBAAD,EAAoB;AAAEtB,EAAAA;AAAF,CAApB,CAAP,CAAoDE,SAApD,CAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { submitSubredditInfo } from '../../actions/subreddit';\nimport DashboardTable from './DashboardTable';\n\nconst Dashboard = ({ submitSubredditInfo, subredditState: { subreddits } }) => {\n  const [formData, setFormData] = useState({\n    subredditName: '',\n    subredditKeywords: '',\n  });\n\n  const { subredditName, subredditKeywords } = formData;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // send formData by using an action.\n    submitSubredditInfo({ subredditName, subredditKeywords });\n  };\n\n  const handleSubredditName = (e) => {\n    setFormData({\n      ...formData,\n      subredditName: e.target.value,\n    });\n  };\n\n  const handleSubredditKeywords = (e) => {\n    setFormData({\n      ...formData,\n      subredditKeywords: e.target.value,\n    });\n  };\n\n  const displaySubredditTables = () => {\n    console.log('displaySubredditTables.');\n    console.log('subreddits.length: ', subreddits.length);\n    return subreddits.map((subreddit) => (\n      <DashboardTable subreddit={subreddit} />\n    ));\n  };\n\n  return (\n    <Fragment>\n      <h1>Reddalerts</h1>\n      <h3>Subreddits To Monitor</h3>\n      <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          placeholder='Subreddit'\n          value={subredditName}\n          onChange={handleSubredditName}\n        />\n        <input\n          type='text'\n          placeholder='Keywords'\n          value={subredditKeywords}\n          onChange={handleSubredditKeywords}\n        />\n        <input type='submit' value='Submit' />\n        {displaySubredditTables()}\n      </form>\n    </Fragment>\n  );\n};\n\nconst mapToStateToProps = (state) => ({\n  subredditState: state.subreddit,\n});\n\nexport default connect(mapToStateToProps, { submitSubredditInfo })(Dashboard);\n"]},"metadata":{},"sourceType":"module"}