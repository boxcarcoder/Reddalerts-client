{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{Fragment}from'react';import{deleteMonitoredSubreddit}from'../../actions/subreddit';import{connect}from'react-redux';var DashboardTable=function DashboardTable(_ref){var _ref$subreddit=_ref.subreddit,subreddit_name=_ref$subreddit.subreddit_name,keywords=_ref$subreddit.keywords,deleteMonitoredSubreddit=_ref.deleteMonitoredSubreddit,id=_ref.authState.loggedInUser.id;var handleDelete=function handleDelete(e){e.preventDefault();deleteMonitoredSubreddit(id,subreddit_name);};var displayKeywords=function displayKeywords(keywords){return keywords.map(function(keywordObj){return/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{children:keywordObj.keyword})});});};return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"subredditTableAndDeleteBtn\",children:[/*#__PURE__*/_jsxs(\"table\",{className:\"subredditTable\",children:[/*#__PURE__*/_jsxs(\"thead\",{children:[/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"th\",{colspan:\"2\",children:subreddit_name})}),/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"line\"})})]}),/*#__PURE__*/_jsx(\"tbody\",{children:displayKeywords(keywords)})]}),/*#__PURE__*/_jsx(\"button\",{className:\"deleteBtn\",onClick:function onClick(e){return handleDelete(e);},children:\"Delete\"})]})});};var mapStateToProps=function mapStateToProps(state){return{authState:state.auth};};export default connect(mapStateToProps,{deleteMonitoredSubreddit:deleteMonitoredSubreddit})(DashboardTable);","map":{"version":3,"sources":["/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/dashboard/DashboardTable.js"],"names":["React","Fragment","deleteMonitoredSubreddit","connect","DashboardTable","subreddit","subreddit_name","keywords","id","authState","loggedInUser","handleDelete","e","preventDefault","displayKeywords","map","keywordObj","keyword","mapStateToProps","state","auth"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,wBAAT,KAAyC,yBAAzC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAMjB,yBALJC,SAKI,CALSC,cAKT,gBALSA,cAKT,CALyBC,QAKzB,gBALyBA,QAKzB,CAJJL,wBAII,MAJJA,wBAII,CAFcM,EAEd,MAHJC,SAGI,CAFFC,YAEE,CAFcF,EAEd,CACJ,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1BA,CAAC,CAACC,cAAF,GACAX,wBAAwB,CAACM,EAAD,CAAKF,cAAL,CAAxB,CACD,CAHD,CAKA,GAAMQ,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACP,QAAD,CAAc,CACpC,MAAOA,CAAAA,QAAQ,CAACQ,GAAT,CAAa,SAACC,UAAD,qBAClB,iCACE,oBAAKA,UAAU,CAACC,OAAhB,EADF,EADkB,EAAb,CAAP,CAKD,CAND,CAQA,mBACE,KAAC,QAAD,wBACE,aAAK,SAAS,CAAC,4BAAf,wBACE,eAAO,SAAS,CAAC,gBAAjB,wBACE,sCACE,iCACE,WAAI,OAAO,CAAC,GAAZ,UAAiBX,cAAjB,EADF,EADF,cAIE,iCACE,YAAK,SAAS,CAAC,MAAf,EADF,EAJF,GADF,cASE,uBAAQQ,eAAe,CAACP,QAAD,CAAvB,EATF,GADF,cAYE,eAAQ,SAAS,CAAC,WAAlB,CAA8B,OAAO,CAAE,iBAACK,CAAD,QAAOD,CAAAA,YAAY,CAACC,CAAD,CAAnB,EAAvC,oBAZF,GADF,EADF,CAoBD,CAxCD,CA0CA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCV,SAAS,CAAEU,KAAK,CAACC,IADiB,CAAZ,EAAxB,CAIA,cAAejB,CAAAA,OAAO,CAACe,eAAD,CAAkB,CAAEhB,wBAAwB,CAAxBA,wBAAF,CAAlB,CAAP,CACbE,cADa,CAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { deleteMonitoredSubreddit } from '../../actions/subreddit';\nimport { connect } from 'react-redux';\n\nconst DashboardTable = ({\n  subreddit: { subreddit_name, keywords },\n  deleteMonitoredSubreddit,\n  authState: {\n    loggedInUser: { id },\n  },\n}) => {\n  const handleDelete = (e) => {\n    e.preventDefault();\n    deleteMonitoredSubreddit(id, subreddit_name);\n  };\n\n  const displayKeywords = (keywords) => {\n    return keywords.map((keywordObj) => (\n      <tr>\n        <td>{keywordObj.keyword}</td>\n      </tr>\n    ));\n  };\n\n  return (\n    <Fragment>\n      <div className='subredditTableAndDeleteBtn'>\n        <table className='subredditTable'>\n          <thead>\n            <tr>\n              <th colspan='2'>{subreddit_name}</th>\n            </tr>\n            <tr>\n              <div className='line' />\n            </tr>\n          </thead>\n          <tbody>{displayKeywords(keywords)}</tbody>\n        </table>\n        <button className='deleteBtn' onClick={(e) => handleDelete(e)}>\n          Delete\n        </button>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  authState: state.auth,\n});\n\nexport default connect(mapStateToProps, { deleteMonitoredSubreddit })(\n  DashboardTable\n);\n"]},"metadata":{},"sourceType":"module"}