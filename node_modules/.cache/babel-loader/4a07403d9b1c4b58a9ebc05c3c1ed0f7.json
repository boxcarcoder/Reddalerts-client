{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{Fragment}from'react';import{Link}from'react-router-dom';import{connect}from'react-redux';import{logout}from'../../actions/auth';var Navbar=function Navbar(_ref){var isAuthenticated=_ref.authState.isAuthenticated,logout=_ref.logout;var handleLogout=function handleLogout(e){logout();};return/*#__PURE__*/_jsx(Fragment,{children:isAuthenticated?/*#__PURE__*/_jsx(\"div\",{className:\"navbar\",children:/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/dashboard\",children:\"Subreddits\"}),/*#__PURE__*/_jsx(Link,{to:\"/settings\",children:\"Settings\"}),/*#__PURE__*/_jsx(\"a\",{onClick:function onClick(e){return handleLogout(e);},href:\"/register\",children:\"Logout\"})]})}):null});};var mapStateToProps=function mapStateToProps(state){return{authState:state.auth};};export default connect(mapStateToProps,{logout:logout})(Navbar);","map":{"version":3,"sources":["/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/components/layout/Navbar.js"],"names":["React","Fragment","Link","connect","logout","Navbar","isAuthenticated","authState","handleLogout","e","mapStateToProps","state","auth"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,MAAT,KAAuB,oBAAvB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAgD,IAAhCC,CAAAA,eAAgC,MAA7CC,SAA6C,CAAhCD,eAAgC,CAAbF,MAAa,MAAbA,MAAa,CAC7D,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1BL,MAAM,GACP,CAFD,CAIA,mBACE,KAAC,QAAD,WACGE,eAAe,cACd,YAAK,SAAS,CAAC,QAAf,uBACE,MAAC,QAAD,yBACE,KAAC,IAAD,EAAM,EAAE,CAAC,YAAT,wBADF,cAEE,KAAC,IAAD,EAAM,EAAE,CAAC,WAAT,sBAFF,cAGE,UAAG,OAAO,CAAE,iBAACG,CAAD,QAAOD,CAAAA,YAAY,CAACC,CAAD,CAAnB,EAAZ,CAAoC,IAAI,CAAC,WAAzC,oBAHF,GADF,EADc,CAUZ,IAXN,EADF,CAeD,CApBD,CAsBA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCJ,SAAS,CAAEI,KAAK,CAACC,IADiB,CAAZ,EAAxB,CAIA,cAAeT,CAAAA,OAAO,CAACO,eAAD,CAAkB,CAAEN,MAAM,CAANA,MAAF,CAAlB,CAAP,CAAqCC,MAArC,CAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/auth';\n\nconst Navbar = ({ authState: { isAuthenticated }, logout }) => {\n  const handleLogout = (e) => {\n    logout();\n  };\n\n  return (\n    <Fragment>\n      {isAuthenticated ? (\n        <div className='navbar'>\n          <Fragment>\n            <Link to='/dashboard'>Subreddits</Link>\n            <Link to='/settings'>Settings</Link>\n            <a onClick={(e) => handleLogout(e)} href='/register'>\n              Logout\n            </a>\n          </Fragment>\n        </div>\n      ) : null}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  authState: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n"]},"metadata":{},"sourceType":"module"}