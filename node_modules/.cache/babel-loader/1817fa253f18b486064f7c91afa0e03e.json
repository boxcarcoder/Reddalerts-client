{"ast":null,"code":"import _toConsumableArray from\"/Users/brendan/Documents/development/portfolio/Reddalerts/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/brendan/Documents/development/portfolio/Reddalerts/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/* eslint-disable import/no-anonymous-default-export */import{SUBMIT_SUBREDDIT_INFO,SUBMIT_SUBREDDIT_INFO_FAIL,FETCH_SUBREDDITS,FETCH_SUBREDDITS_FAIL,DELETE_SUBREDDIT,DELETE_SUBREDDIT_FAIL,UPDATE_SUBREDDIT_KEYWORDS}from'../actions/types';var initialState={subreddits:[],loading:false,error:{}};export default function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var type=action.type,payload=action.payload;switch(type){case SUBMIT_SUBREDDIT_INFO:return _objectSpread(_objectSpread({},state),{},{subreddits:[].concat(_toConsumableArray(state.subreddits),[payload.subreddit])});case SUBMIT_SUBREDDIT_INFO_FAIL:return _objectSpread(_objectSpread({},state),{},{error:payload});case UPDATE_SUBREDDIT_KEYWORDS:return _objectSpread(_objectSpread({},state),{},{subreddits:state.subreddits.map(function(subreddit){return subreddit.subreddit_name===payload.subreddit.subreddit_name?_objectSpread(_objectSpread({},subreddit),{},{keywords:payload.subreddit.keywords}):subreddit;})});case FETCH_SUBREDDITS:return _objectSpread(_objectSpread({},state),{},{subreddits:payload.subreddits});case FETCH_SUBREDDITS_FAIL:return _objectSpread(_objectSpread({},state),{},{error:payload});case DELETE_SUBREDDIT:return _objectSpread(_objectSpread({},state),{},{subreddits:payload.subreddits});case DELETE_SUBREDDIT_FAIL:return _objectSpread(_objectSpread({},state),{},{error:payload});default:return state;}}","map":{"version":3,"sources":["/Users/brendan/Documents/development/portfolio/Reddalerts/client/src/reducers/subreddit.js"],"names":["SUBMIT_SUBREDDIT_INFO","SUBMIT_SUBREDDIT_INFO_FAIL","FETCH_SUBREDDITS","FETCH_SUBREDDITS_FAIL","DELETE_SUBREDDIT","DELETE_SUBREDDIT_FAIL","UPDATE_SUBREDDIT_KEYWORDS","initialState","subreddits","loading","error","state","action","type","payload","subreddit","map","subreddit_name","keywords"],"mappings":"qXAAA,uDACA,OACEA,qBADF,CAEEC,0BAFF,CAGEC,gBAHF,CAIEC,qBAJF,CAKEC,gBALF,CAMEC,qBANF,CAOEC,yBAPF,KAQO,kBARP,CAUA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,UAAU,CAAE,EADO,CAEnBC,OAAO,CAAE,KAFU,CAGnBC,KAAK,CAAE,EAHY,CAArB,CAMA,cAAe,WAAwC,IAA9BC,CAAAA,KAA8B,2DAAtBJ,YAAsB,IAARK,CAAAA,MAAQ,8CAC7CC,CAAAA,IAD6C,CAC3BD,MAD2B,CAC7CC,IAD6C,CACvCC,OADuC,CAC3BF,MAD2B,CACvCE,OADuC,CAGrD,OAAQD,IAAR,EACE,IAAKb,CAAAA,qBAAL,CACE,sCACKW,KADL,MAEEH,UAAU,8BAAMG,KAAK,CAACH,UAAZ,GAAwBM,OAAO,CAACC,SAAhC,EAFZ,GAIF,IAAKd,CAAAA,0BAAL,CACE,sCACKU,KADL,MAEED,KAAK,CAAEI,OAFT,GAIF,IAAKR,CAAAA,yBAAL,CACE,sCACKK,KADL,MAEEH,UAAU,CAAEG,KAAK,CAACH,UAAN,CAAiBQ,GAAjB,CAAqB,SAACD,SAAD,QAC/BA,CAAAA,SAAS,CAACE,cAAV,GAA6BH,OAAO,CAACC,SAAR,CAAkBE,cAA/C,gCAESF,SAFT,MAGMG,QAAQ,CAAEJ,OAAO,CAACC,SAAR,CAAkBG,QAHlC,GAKIH,SAN2B,EAArB,CAFd,GAWF,IAAKb,CAAAA,gBAAL,CACE,sCACKS,KADL,MAEEH,UAAU,CAAEM,OAAO,CAACN,UAFtB,GAIF,IAAKL,CAAAA,qBAAL,CACE,sCACKQ,KADL,MAEED,KAAK,CAAEI,OAFT,GAIF,IAAKV,CAAAA,gBAAL,CACE,sCACKO,KADL,MAEEH,UAAU,CAAEM,OAAO,CAACN,UAFtB,GAIF,IAAKH,CAAAA,qBAAL,CACE,sCACKM,KADL,MAEED,KAAK,CAAEI,OAFT,GAIF,QACE,MAAOH,CAAAA,KAAP,CA5CJ,CA8CD","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nimport {\n  SUBMIT_SUBREDDIT_INFO,\n  SUBMIT_SUBREDDIT_INFO_FAIL,\n  FETCH_SUBREDDITS,\n  FETCH_SUBREDDITS_FAIL,\n  DELETE_SUBREDDIT,\n  DELETE_SUBREDDIT_FAIL,\n  UPDATE_SUBREDDIT_KEYWORDS,\n} from '../actions/types';\n\nconst initialState = {\n  subreddits: [],\n  loading: false,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SUBMIT_SUBREDDIT_INFO:\n      return {\n        ...state,\n        subreddits: [...state.subreddits, payload.subreddit],\n      };\n    case SUBMIT_SUBREDDIT_INFO_FAIL:\n      return {\n        ...state,\n        error: payload,\n      };\n    case UPDATE_SUBREDDIT_KEYWORDS:\n      return {\n        ...state,\n        subreddits: state.subreddits.map((subreddit) =>\n          subreddit.subreddit_name === payload.subreddit.subreddit_name\n            ? {\n                ...subreddit,\n                keywords: payload.subreddit.keywords,\n              }\n            : subreddit\n        ),\n      };\n    case FETCH_SUBREDDITS:\n      return {\n        ...state,\n        subreddits: payload.subreddits,\n      };\n    case FETCH_SUBREDDITS_FAIL:\n      return {\n        ...state,\n        error: payload,\n      };\n    case DELETE_SUBREDDIT:\n      return {\n        ...state,\n        subreddits: payload.subreddits,\n      };\n    case DELETE_SUBREDDIT_FAIL:\n      return {\n        ...state,\n        error: payload,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}