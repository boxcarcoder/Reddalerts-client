[{"/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/index.js":"1","/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/components/layout/Landing.js":"2","/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/components/dashboard/Dashboard.js":"3","/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/components/profile/Settings.js":"4","/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/components/auth/Register.js":"5","/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/components/dashboard/DashboardTable.js":"6","/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/reducers/index.js":"7","/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/reducers/subreddit.js":"8","/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/App.js":"9","/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/components/auth/Login.js":"10","/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/actions/auth.js":"11","/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/reducers/auth.js":"12","/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/actions/types.js":"13","/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/store.js":"14","/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/actions/subreddit.js":"15","/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/components/layout/Navbar.js":"16","/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/actions/alert.js":"17","/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/components/layout/Alert.js":"18","/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/reducers/alert.js":"19"},{"size":197,"mtime":1606953285248,"results":"20","hashOfConfig":"21"},{"size":977,"mtime":1617836416866,"results":"22","hashOfConfig":"21"},{"size":2612,"mtime":1629249022624,"results":"23","hashOfConfig":"21"},{"size":2058,"mtime":1629309557648,"results":"24","hashOfConfig":"21"},{"size":2126,"mtime":1617662562757,"results":"25","hashOfConfig":"21"},{"size":1299,"mtime":1629144407539,"results":"26","hashOfConfig":"21"},{"size":202,"mtime":1629310803271,"results":"27","hashOfConfig":"21"},{"size":2100,"mtime":1627669063704,"results":"28","hashOfConfig":"21"},{"size":1160,"mtime":1629248597952,"results":"29","hashOfConfig":"21"},{"size":1709,"mtime":1617229672197,"results":"30","hashOfConfig":"21"},{"size":2929,"mtime":1629311367346,"results":"31","hashOfConfig":"21"},{"size":1225,"mtime":1629311137568,"results":"32","hashOfConfig":"21"},{"size":982,"mtime":1629310954830,"results":"33","hashOfConfig":"21"},{"size":381,"mtime":1608232226144,"results":"34","hashOfConfig":"21"},{"size":4939,"mtime":1629249225755,"results":"35","hashOfConfig":"21"},{"size":803,"mtime":1617662624019,"results":"36","hashOfConfig":"21"},{"size":526,"mtime":1629249197801,"results":"37","hashOfConfig":"21"},{"size":637,"mtime":1629249204554,"results":"38","hashOfConfig":"21"},{"size":520,"mtime":1629247965066,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1gfybfy",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/index.js",[],["85","86"],"/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/components/layout/Landing.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/components/dashboard/Dashboard.js",["87"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  submitSubredditInfo,\n  fetchUserSubreddits,\n} from '../../actions/subreddit';\nimport DashboardTable from './DashboardTable';\n\nconst Dashboard = ({\n  submitSubredditInfo,\n  fetchUserSubreddits,\n  subredditState: { subreddits, error },\n  authState: {\n    loggedInUser: { id },\n    isAuthenticated,\n  },\n}) => {\n  // need to populate the redux state using useEffect before rendering dashboard.\n  useEffect(() => {\n    fetchUserSubreddits(id);\n  }, []);\n\n  const [formData, setFormData] = useState({\n    subredditName: '',\n    subredditKeywords: '',\n  });\n\n  const { subredditName, subredditKeywords } = formData;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    submitSubredditInfo({ id, subredditName, subredditKeywords });\n    setFormData({\n      subredditName: '',\n      subredditKeywords: '',\n    });\n  };\n\n  const handleSubredditName = (e) => {\n    setFormData({\n      ...formData,\n      subredditName: e.target.value,\n    });\n  };\n\n  const handleSubredditKeywords = (e) => {\n    setFormData({\n      ...formData,\n      subredditKeywords: e.target.value,\n    });\n  };\n\n  const displaySubredditTables = () => {\n    return subreddits.map((subreddit) => (\n      <DashboardTable subreddit={subreddit} />\n    ));\n  };\n\n  if (!isAuthenticated) {\n    return <Redirect to='/register' />;\n  }\n\n  return (\n    <Fragment>\n      <h1 className='defaultHeader'>ReddAlerts</h1>\n      <div className='submissionBox'>\n        <h2>Subreddits To Monitor</h2>\n        <div className='line'></div>\n        <form onSubmit={handleSubmit}>\n          <p>Subreddit (/r/)</p>\n          <input\n            type='text'\n            placeholder='technology'\n            value={subredditName}\n            onChange={handleSubredditName}\n          />\n          <p className='smallText'>One subreddit per submission.</p>\n          <div className='line'></div>\n\n          <p>Keywords</p>\n          <input\n            type='text'\n            placeholder='javascript, reactjs'\n            value={subredditKeywords}\n            onChange={handleSubredditKeywords}\n          />\n          <p className='smallText'>Comma separated list.</p>\n\n          <input type='submit' value='Submit' />\n        </form>\n      </div>\n\n      {displaySubredditTables()}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  subredditState: state.subreddit,\n  authState: state.auth,\n});\n\nexport default connect(mapStateToProps, {\n  submitSubredditInfo,\n  fetchUserSubreddits,\n})(Dashboard);\n","/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/components/profile/Settings.js",[],["88","89"],"/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/components/auth/Register.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/components/dashboard/DashboardTable.js",[],["90","91"],"/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/reducers/index.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/reducers/subreddit.js",[],["92","93"],"/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/App.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/components/auth/Login.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/actions/auth.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/reducers/auth.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/actions/types.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/store.js",[],["94","95"],"/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/actions/subreddit.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/components/layout/Navbar.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/actions/alert.js",[],["96","97"],"/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/components/layout/Alert.js",[],"/Users/brendan/Documents/development/portfolio/Reddalerts-client/src/reducers/alert.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":22,"column":6,"nodeType":"104","endLine":22,"endColumn":8,"suggestions":"105"},{"ruleId":"98","replacedBy":"106"},{"ruleId":"100","replacedBy":"107"},{"ruleId":"98","replacedBy":"108"},{"ruleId":"100","replacedBy":"109"},{"ruleId":"98","replacedBy":"110"},{"ruleId":"100","replacedBy":"111"},{"ruleId":"98","replacedBy":"112"},{"ruleId":"100","replacedBy":"113"},{"ruleId":"98","replacedBy":"114"},{"ruleId":"100","replacedBy":"115"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchUserSubreddits' and 'id'. Either include them or remove the dependency array. If 'fetchUserSubreddits' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["118"],["116"],["117"],["116"],["117"],["116"],["117"],["116"],["117"],["116"],["117"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [fetchUserSubreddits, id]",{"range":"121","text":"122"},[602,604],"[fetchUserSubreddits, id]"]